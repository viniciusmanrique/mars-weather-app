import * as React from 'react';
declare enum EAnimations {
    TOP_TO_BOTTOM = "top_to_bottom",
    BOTTOM_TO_TOP = "bottom_to_top",
    LEFT_TO_RIGHT = "left_to_right",
    RIGHT_TO_LEFT = "right_to_left",
    FADE = "fade"
}
declare enum EOrientation {
    VERTICAL = "vertical",
    HORIZONTAL = "horizontal"
}
interface ISettingsProps {
    slidingDuration: number;
    slidingDelay: number;
    sliderColor: string;
    isSmartSliding: boolean;
    shouldDisplayButtons: boolean;
    shouldAutoplay: boolean;
    autoplayDuration: number;
    autoplayHandlerTimeout: number;
}
interface INavPosition {
    top: string;
    left: string;
    bottom: string;
    right: string;
    transform: string;
}
interface INavSettings {
    position: INavPosition;
    color: string;
    activeColor: string;
}
export interface INavProps extends INavSettings {
    totalSlides: number;
    activeSlide: number;
    changeSlide: TAnyFunction;
}
export interface ISideNavProps extends INavProps {
    right: string;
    left: string;
    isPositionedRight: boolean;
}
export interface IMenuNavProps extends INavProps {
    menuDescriptions: string[];
}
export interface ISlideProps {
    isActive: boolean;
    isDoneSliding: boolean;
    menuNavDescription: string;
    slidingAnimation: string;
    style: React.CSSProperties;
    sliderDimensions: any;
    children: React.ReactChildren;
}
interface INavbarSettings {
    color: string;
    activeColor: string;
}
interface ISliderProps {
    children: React.ReactElement[] | React.ReactElement;
    settings?: ISettingsProps;
    orientation: EOrientation;
    slidingAnimation?: EAnimations;
    isSmartSliding?: boolean;
    initialSlide?: number;
    nextSlide?: React.MutableRefObject<any>;
    previousSlide?: React.MutableRefObject<any>;
    navbarSettings?: INavbarSettings;
}
declare const heroSlider: React.MemoExoticComponent<(props: ISliderProps) => JSX.Element>;
export default heroSlider;
